"""Generated client library for ml version v1alpha2."""
# NOTE: This file is autogenerated and should not be edited by hand.
from googlecloudsdk.third_party.apitools.base.py import base_api
from googlecloudsdk.third_party.apis.ml.v1alpha2 import ml_v1alpha2_messages as messages


class MlV1alpha2(base_api.BaseApiClient):
  """Generated client library for service ml version v1alpha2."""

  MESSAGES_MODULE = messages

  _PACKAGE = u'ml'
  _SCOPES = [u'https://www.googleapis.com/auth/cloud-platform']
  _VERSION = u'v1alpha2'
  _CLIENT_ID = '1042881264118.apps.googleusercontent.com'
  _CLIENT_SECRET = 'x_Tw5K8nnjoRAqULM9PFAC2b'
  _USER_AGENT = 'x_Tw5K8nnjoRAqULM9PFAC2b'
  _CLIENT_CLASS_NAME = u'MlV1alpha2'
  _URL_VERSION = u'v1alpha2'
  _API_KEY = None

  def __init__(self, url='', credentials=None,
               get_credentials=True, http=None, model=None,
               log_request=False, log_response=False,
               credentials_args=None, default_global_params=None,
               additional_http_headers=None):
    """Create a new ml handle."""
    url = url or u'https://ml.googleapis.com/'
    super(MlV1alpha2, self).__init__(
        url, credentials=credentials,
        get_credentials=get_credentials, http=http, model=model,
        log_request=log_request, log_response=log_response,
        credentials_args=credentials_args,
        default_global_params=default_global_params,
        additional_http_headers=additional_http_headers)
    self.projects_models = self.ProjectsModelsService(self)
    self.projects_operations = self.ProjectsOperationsService(self)
    self.projects = self.ProjectsService(self)

  class ProjectsModelsService(base_api.BaseApiService):
    """Service class for the projects_models resource."""

    _NAME = u'projects_models'

    def __init__(self, client):
      super(MlV1alpha2.ProjectsModelsService, self).__init__(client)
      self._method_configs = {
          'Create': base_api.ApiMethodInfo(
              http_method=u'POST',
              method_id=u'ml.projects.models.create',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}/models',
              request_field=u'model',
              request_type_name=u'MlProjectsModelsCreateRequest',
              response_type_name=u'Model',
              supports_download=False,
          ),
          'Delete': base_api.ApiMethodInfo(
              http_method=u'DELETE',
              method_id=u'ml.projects.models.delete',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}',
              request_field='',
              request_type_name=u'MlProjectsModelsDeleteRequest',
              response_type_name=u'Empty',
              supports_download=False,
          ),
          'DeleteVersion': base_api.ApiMethodInfo(
              http_method=u'POST',
              method_id=u'ml.projects.models.deleteVersion',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}:deleteVersion',
              request_field=u'deleteVersionRequest',
              request_type_name=u'MlProjectsModelsDeleteVersionRequest',
              response_type_name=u'Model',
              supports_download=False,
          ),
          'Get': base_api.ApiMethodInfo(
              http_method=u'GET',
              method_id=u'ml.projects.models.get',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}',
              request_field='',
              request_type_name=u'MlProjectsModelsGetRequest',
              response_type_name=u'Model',
              supports_download=False,
          ),
          'GetVersion': base_api.ApiMethodInfo(
              http_method=u'POST',
              method_id=u'ml.projects.models.getVersion',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}:getVersion',
              request_field=u'getVersionRequest',
              request_type_name=u'MlProjectsModelsGetVersionRequest',
              response_type_name=u'GetVersionResponse',
              supports_download=False,
          ),
          'List': base_api.ApiMethodInfo(
              http_method=u'GET',
              method_id=u'ml.projects.models.list',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[u'filter', u'orderBy', u'pageSize', u'pageToken'],
              relative_path=u'v1alpha2/{+name}/models',
              request_field='',
              request_type_name=u'MlProjectsModelsListRequest',
              response_type_name=u'ListModelsResponse',
              supports_download=False,
          ),
          'Patch': base_api.ApiMethodInfo(
              http_method=u'PATCH',
              method_id=u'ml.projects.models.patch',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}',
              request_field='<request>',
              request_type_name=u'Model',
              response_type_name=u'Model',
              supports_download=False,
          ),
          'Predict': base_api.ApiMethodInfo(
              http_method=u'POST',
              method_id=u'ml.projects.models.predict',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}:predict',
              request_field=u'predictRequest',
              request_type_name=u'MlProjectsModelsPredictRequest',
              response_type_name=u'PredictResponse',
              supports_download=False,
          ),
          'SetDefaultVersion': base_api.ApiMethodInfo(
              http_method=u'POST',
              method_id=u'ml.projects.models.setDefaultVersion',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}:setDefaultVersion',
              request_field=u'setDefaultVersionRequest',
              request_type_name=u'MlProjectsModelsSetDefaultVersionRequest',
              response_type_name=u'Model',
              supports_download=False,
          ),
          'SubmitEvaluationJob': base_api.ApiMethodInfo(
              http_method=u'POST',
              method_id=u'ml.projects.models.submitEvaluationJob',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}:submitEvaluationJob',
              request_field=u'submitEvaluationJobRequest',
              request_type_name=u'MlProjectsModelsSubmitEvaluationJobRequest',
              response_type_name=u'Operation',
              supports_download=False,
          ),
          'SubmitPredictionJob': base_api.ApiMethodInfo(
              http_method=u'POST',
              method_id=u'ml.projects.models.submitPredictionJob',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}:submitPredictionJob',
              request_field=u'submitPredictionJobRequest',
              request_type_name=u'MlProjectsModelsSubmitPredictionJobRequest',
              response_type_name=u'Operation',
              supports_download=False,
          ),
          'SubmitTrainingJob': base_api.ApiMethodInfo(
              http_method=u'POST',
              method_id=u'ml.projects.models.submitTrainingJob',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}:submitTrainingJob',
              request_field=u'submitTrainingJobRequest',
              request_type_name=u'MlProjectsModelsSubmitTrainingJobRequest',
              response_type_name=u'Operation',
              supports_download=False,
          ),
          }

      self._upload_configs = {
          }

    def Create(self, request, global_params=None):
      """Create a new model.

      Args:
        request: (MlProjectsModelsCreateRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Model) The response message.
      """
      config = self.GetMethodConfig('Create')
      return self._RunMethod(
          config, request, global_params=global_params)

    def Delete(self, request, global_params=None):
      """Delete the specified model.

      Args:
        request: (MlProjectsModelsDeleteRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Empty) The response message.
      """
      config = self.GetMethodConfig('Delete')
      return self._RunMethod(
          config, request, global_params=global_params)

    def DeleteVersion(self, request, global_params=None):
      """Delete the specified version of the model.

      Args:
        request: (MlProjectsModelsDeleteVersionRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Model) The response message.
      """
      config = self.GetMethodConfig('DeleteVersion')
      return self._RunMethod(
          config, request, global_params=global_params)

    def Get(self, request, global_params=None):
      """Get information about a single model.

      Args:
        request: (MlProjectsModelsGetRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Model) The response message.
      """
      config = self.GetMethodConfig('Get')
      return self._RunMethod(
          config, request, global_params=global_params)

    def GetVersion(self, request, global_params=None):
      """Describes the model version.

      Args:
        request: (MlProjectsModelsGetVersionRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (GetVersionResponse) The response message.
      """
      config = self.GetMethodConfig('GetVersion')
      return self._RunMethod(
          config, request, global_params=global_params)

    def List(self, request, global_params=None):
      """Get the list of models.

      Args:
        request: (MlProjectsModelsListRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (ListModelsResponse) The response message.
      """
      config = self.GetMethodConfig('List')
      return self._RunMethod(
          config, request, global_params=global_params)

    def Patch(self, request, global_params=None):
      """Update the specified model.

      Args:
        request: (Model) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Model) The response message.
      """
      config = self.GetMethodConfig('Patch')
      return self._RunMethod(
          config, request, global_params=global_params)

    def Predict(self, request, global_params=None):
      """Performs online prediction using a specific version of the model.

      Args:
        request: (MlProjectsModelsPredictRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (PredictResponse) The response message.
      """
      config = self.GetMethodConfig('Predict')
      return self._RunMethod(
          config, request, global_params=global_params)

    def SetDefaultVersion(self, request, global_params=None):
      """Update the specified model to change its default version.

      Args:
        request: (MlProjectsModelsSetDefaultVersionRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Model) The response message.
      """
      config = self.GetMethodConfig('SetDefaultVersion')
      return self._RunMethod(
          config, request, global_params=global_params)

    def SubmitEvaluationJob(self, request, global_params=None):
      """Submit an evaluation job.

      Args:
        request: (MlProjectsModelsSubmitEvaluationJobRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Operation) The response message.
      """
      config = self.GetMethodConfig('SubmitEvaluationJob')
      return self._RunMethod(
          config, request, global_params=global_params)

    def SubmitPredictionJob(self, request, global_params=None):
      """Submit a prediction job.

      Args:
        request: (MlProjectsModelsSubmitPredictionJobRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Operation) The response message.
      """
      config = self.GetMethodConfig('SubmitPredictionJob')
      return self._RunMethod(
          config, request, global_params=global_params)

    def SubmitTrainingJob(self, request, global_params=None):
      """Submit a training job.

      Args:
        request: (MlProjectsModelsSubmitTrainingJobRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Operation) The response message.
      """
      config = self.GetMethodConfig('SubmitTrainingJob')
      return self._RunMethod(
          config, request, global_params=global_params)

  class ProjectsOperationsService(base_api.BaseApiService):
    """Service class for the projects_operations resource."""

    _NAME = u'projects_operations'

    def __init__(self, client):
      super(MlV1alpha2.ProjectsOperationsService, self).__init__(client)
      self._method_configs = {
          'Cancel': base_api.ApiMethodInfo(
              http_method=u'POST',
              method_id=u'ml.projects.operations.cancel',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}:cancel',
              request_field='',
              request_type_name=u'MlProjectsOperationsCancelRequest',
              response_type_name=u'Empty',
              supports_download=False,
          ),
          'Delete': base_api.ApiMethodInfo(
              http_method=u'DELETE',
              method_id=u'ml.projects.operations.delete',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}',
              request_field='',
              request_type_name=u'MlProjectsOperationsDeleteRequest',
              response_type_name=u'Empty',
              supports_download=False,
          ),
          'Get': base_api.ApiMethodInfo(
              http_method=u'GET',
              method_id=u'ml.projects.operations.get',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[],
              relative_path=u'v1alpha2/{+name}',
              request_field='',
              request_type_name=u'MlProjectsOperationsGetRequest',
              response_type_name=u'Operation',
              supports_download=False,
          ),
          'List': base_api.ApiMethodInfo(
              http_method=u'GET',
              method_id=u'ml.projects.operations.list',
              ordered_params=[u'name'],
              path_params=[u'name'],
              query_params=[u'filter', u'pageSize', u'pageToken'],
              relative_path=u'v1alpha2/{+name}/operations',
              request_field='',
              request_type_name=u'MlProjectsOperationsListRequest',
              response_type_name=u'ListOperationsResponse',
              supports_download=False,
          ),
          }

      self._upload_configs = {
          }

    def Cancel(self, request, global_params=None):
      """Starts asynchronous cancellation on a long-running operation.  The server.
makes a best effort to cancel the operation, but success is not
guaranteed.  If the server doesn't support this method, it returns
`google.rpc.Code.UNIMPLEMENTED`.  Clients can use
Operations.GetOperation or
other methods to check whether the cancellation succeeded or whether the
operation completed despite cancellation.

      Args:
        request: (MlProjectsOperationsCancelRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Empty) The response message.
      """
      config = self.GetMethodConfig('Cancel')
      return self._RunMethod(
          config, request, global_params=global_params)

    def Delete(self, request, global_params=None):
      """Deletes a long-running operation. This method indicates that the client is.
no longer interested in the operation result. It does not cancel the
operation. If the server doesn't support this method, it returns
`google.rpc.Code.UNIMPLEMENTED`.

      Args:
        request: (MlProjectsOperationsDeleteRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Empty) The response message.
      """
      config = self.GetMethodConfig('Delete')
      return self._RunMethod(
          config, request, global_params=global_params)

    def Get(self, request, global_params=None):
      """Gets the latest state of a long-running operation.  Clients can use this.
method to poll the operation result at intervals as recommended by the API
service.

      Args:
        request: (MlProjectsOperationsGetRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (Operation) The response message.
      """
      config = self.GetMethodConfig('Get')
      return self._RunMethod(
          config, request, global_params=global_params)

    def List(self, request, global_params=None):
      """Lists operations that match the specified filter in the request. If the.
server doesn't support this method, it returns `UNIMPLEMENTED`.

NOTE: the `name` binding below allows API services to override the binding
to use different resource name schemes, such as `users/*/operations`.

      Args:
        request: (MlProjectsOperationsListRequest) input message
        global_params: (StandardQueryParameters, default: None) global arguments
      Returns:
        (ListOperationsResponse) The response message.
      """
      config = self.GetMethodConfig('List')
      return self._RunMethod(
          config, request, global_params=global_params)

  class ProjectsService(base_api.BaseApiService):
    """Service class for the projects resource."""

    _NAME = u'projects'

    def __init__(self, client):
      super(MlV1alpha2.ProjectsService, self).__init__(client)
      self._method_configs = {
          }

      self._upload_configs = {
          }
